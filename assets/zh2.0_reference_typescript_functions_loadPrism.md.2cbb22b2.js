import{_ as s,c as a,o as e,a as o}from"./app.99369a49.js";const f=JSON.parse('{"title":"loadPrism","description":"","frontmatter":{},"headers":[],"relativePath":"zh2.0/reference/typescript/functions/loadPrism.md","lastUpdated":1663662106000}'),t={name:"zh2.0/reference/typescript/functions/loadPrism.md"},n=o(`<h1 id="loadprism" tabindex="-1">loadPrism <a class="header-anchor" href="#loadprism" aria-hidden="true">#</a></h1><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadPrism</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div><p>Load Prism.js and return a promise to the global Prism object. Can also use <code>Prism</code> after this promise resolves to get the same reference.</p>`,3),r=[n];function l(p,c,i,d,_,m){return e(),a("div",null,r)}const y=s(t,[["render",l]]);export{f as __pageData,y as default};
