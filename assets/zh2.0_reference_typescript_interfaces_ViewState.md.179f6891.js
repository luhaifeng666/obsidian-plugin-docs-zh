import{_ as a,c as e,o as s,a as n}from"./app.b096215c.js";const y=JSON.parse('{"title":"ViewState","description":"","frontmatter":{},"headers":[{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"type","slug":"type"},{"level":3,"title":"state","slug":"state"},{"level":3,"title":"active","slug":"active"},{"level":3,"title":"pinned","slug":"pinned"},{"level":3,"title":"group","slug":"group"}],"relativePath":"zh2.0/reference/typescript/interfaces/ViewState.md","lastUpdated":1667895604000}'),t={name:"zh2.0/reference/typescript/interfaces/ViewState.md"},p=n(`<h1 id="viewstate" tabindex="-1">ViewState <a class="header-anchor" href="#viewstate" aria-hidden="true">#</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> string</span></span>
<span class="line"></span></code></pre></div><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">state</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> any</span></span>
<span class="line"></span></code></pre></div><h3 id="active" tabindex="-1">active <a class="header-anchor" href="#active" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">active</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> boolean</span></span>
<span class="line"></span></code></pre></div><h3 id="pinned" tabindex="-1">pinned <a class="header-anchor" href="#pinned" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">pinned</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> boolean</span></span>
<span class="line"></span></code></pre></div><h3 id="group" tabindex="-1">group <a class="header-anchor" href="#group" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">group</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WorkspaceLeaf</span></span>
<span class="line"></span></code></pre></div>`,12),l=[p];function r(c,o,i,d,h,u){return s(),e("div",null,l)}const _=a(t,[["render",r]]);export{y as __pageData,_ as default};
