import{_ as s,c as a,o as e,a as o}from"./app.68deaf42.js";const F=JSON.parse('{"title":"loadPdfJs","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/functions/loadPdfJs.md","lastUpdated":1661916903000}'),n={name:"zh/api/functions/loadPdfJs.md"},t=o(`<h1 id="loadpdfjs" tabindex="-1">loadPdfJs <a class="header-anchor" href="#loadpdfjs" aria-hidden="true">#</a></h1><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadPdfJs</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div><p>Load PDF.js and return a promise to the global pdfjsLib object. Can also use <code>window.pdfjsLib</code> after this promise resolves to get the same reference.</p>`,3),l=[t];function p(c,r,d,i,_,f){return e(),a("div",null,l)}const u=s(n,[["render",p]]);export{F as __pageData,u as default};
