import{_ as s,c as a,o as e,a as l}from"./app.1676c935.js";const h=JSON.parse('{"title":"MarkdownSubView","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"getScroll","slug":"getscroll"},{"level":3,"title":"applyScroll","slug":"applyscroll"},{"level":3,"title":"get","slug":"get"},{"level":3,"title":"set","slug":"set"}],"relativePath":"zh2.0/reference/typescript/interfaces/MarkdownSubView.md","lastUpdated":1666927108000}'),n={name:"zh2.0/reference/typescript/interfaces/MarkdownSubView.md"},o=l(`<h1 id="markdownsubview" tabindex="-1">MarkdownSubView <a class="header-anchor" href="#markdownsubview" aria-hidden="true">#</a></h1><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="getscroll" tabindex="-1">getScroll <a class="header-anchor" href="#getscroll" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">getScroll</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> number</span></span>
<span class="line"></span></code></pre></div><h3 id="applyscroll" tabindex="-1">applyScroll <a class="header-anchor" href="#applyscroll" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">applyScroll</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">scroll</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre></div><h3 id="get" tabindex="-1">get <a class="header-anchor" href="#get" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">get</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> string</span></span>
<span class="line"></span></code></pre></div><h3 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">set</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre></div>`,10),t=[o];function p(r,c,d,i,y,D){return e(),a("div",null,t)}const F=s(n,[["render",p]]);export{h as __pageData,F as default};
