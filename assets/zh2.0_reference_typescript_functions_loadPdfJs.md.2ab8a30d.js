import{_ as s,c as a,o as e,a as o}from"./app.0177d335.js";const y=JSON.parse('{"title":"loadPdfJs","description":"","frontmatter":{},"headers":[],"relativePath":"zh2.0/reference/typescript/functions/loadPdfJs.md","lastUpdated":1662340628000}'),t={name:"zh2.0/reference/typescript/functions/loadPdfJs.md"},n=o(`<h1 id="loadpdfjs" tabindex="-1">loadPdfJs <a class="header-anchor" href="#loadpdfjs" aria-hidden="true">#</a></h1><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadPdfJs</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div><p>Load PDF.js and return a promise to the global pdfjsLib object. Can also use <code>window.pdfjsLib</code> after this promise resolves to get the same reference.</p>`,3),p=[n];function l(r,c,d,i,_,f){return e(),a("div",null,p)}const F=s(t,[["render",l]]);export{y as __pageData,F as default};
