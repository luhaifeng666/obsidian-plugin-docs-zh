import{_ as a,c as e,o as s,a as o}from"./app.2f7f52ee.js";const u=JSON.parse('{"title":"loadMermaid","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/functions/loadMermaid.md","lastUpdated":1661829227000}'),n={name:"zh/api/functions/loadMermaid.md"},t=o(`<h1 id="loadmermaid" tabindex="-1">loadMermaid <a class="header-anchor" href="#loadmermaid" aria-hidden="true">#</a></h1><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadMermaid</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div><p>Load Mermaid and return a promise to the global mermaid object. Can also use <code>mermaid</code> after this promise resolves to get the same reference.</p>`,3),r=[t];function l(p,c,d,i,m,_){return s(),e("div",null,r)}const F=a(n,[["render",l]]);export{u as __pageData,F as default};
