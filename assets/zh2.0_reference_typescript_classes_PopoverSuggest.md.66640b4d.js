import{_ as s,c as e,o as a,a as n}from"./app.b096215c.js";const A=JSON.parse('{"title":"PopoverSuggest","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructor","slug":"constructor"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"open","slug":"open"},{"level":3,"title":"close","slug":"close"},{"level":3,"title":"renderSuggestion","slug":"rendersuggestion"},{"level":3,"title":"selectSuggestion","slug":"selectsuggestion"}],"relativePath":"zh2.0/reference/typescript/classes/PopoverSuggest.md","lastUpdated":1667787632000}'),t={name:"zh2.0/reference/typescript/classes/PopoverSuggest.md"},o=n(`<h1 id="popoversuggest" tabindex="-1">PopoverSuggest <a class="header-anchor" href="#popoversuggest" aria-hidden="true">#</a></h1><p>Implements <code>ISuggestOwner&lt;T&gt;</code>, <code>CloseableComponent</code></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">constructor</span><span style="color:#A6ACCD;">(app: App</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scope: Scope)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="open" tabindex="-1">open <a class="header-anchor" href="#open" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><h3 id="close" tabindex="-1">close <a class="header-anchor" href="#close" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">close</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><h3 id="rendersuggestion" tabindex="-1">renderSuggestion <a class="header-anchor" href="#rendersuggestion" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">abstract </span><span style="color:#82AAFF;">renderSuggestion</span><span style="color:#A6ACCD;">(value: T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> el: HTMLElement): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><p>Render the suggestion item into DOM.</p><h3 id="selectsuggestion" tabindex="-1">selectSuggestion <a class="header-anchor" href="#selectsuggestion" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">abstract </span><span style="color:#82AAFF;">selectSuggestion</span><span style="color:#A6ACCD;">(value: T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> evt: MouseEvent </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> KeyboardEvent): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><p>Called when the user makes a selection.</p>`,15),l=[o];function p(c,r,d,i,g,u){return a(),e("div",null,l)}const v=s(t,[["render",p]]);export{A as __pageData,v as default};
