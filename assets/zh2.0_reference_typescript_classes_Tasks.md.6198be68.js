import{_ as s,c as a,o as e,a as n}from"./app.741f1ead.js";const A=JSON.parse('{"title":"Tasks","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructor","slug":"constructor"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"add","slug":"add"},{"level":3,"title":"addPromise","slug":"addpromise"},{"level":3,"title":"isEmpty","slug":"isempty"},{"level":3,"title":"promise","slug":"promise"}],"relativePath":"zh2.0/reference/typescript/classes/Tasks.md","lastUpdated":1661305878000}'),l={name:"zh2.0/reference/typescript/classes/Tasks.md"},t=n(`<h1 id="tasks" tabindex="-1">Tasks <a class="header-anchor" href="#tasks" aria-hidden="true">#</a></h1><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">constructor</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(callback: </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">any</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><h3 id="addpromise" tabindex="-1">addPromise <a class="header-anchor" href="#addpromise" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">addPromise</span><span style="color:#A6ACCD;">(promise: </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">any</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><h3 id="isempty" tabindex="-1">isEmpty <a class="header-anchor" href="#isempty" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">isEmpty</span><span style="color:#A6ACCD;">(): boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="promise" tabindex="-1">promise <a class="header-anchor" href="#promise" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">promise</span><span style="color:#A6ACCD;">(): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">any</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div>`,12),o=[t];function p(r,c,d,i,h,y){return e(),a("div",null,o)}const F=s(l,[["render",p]]);export{A as __pageData,F as default};
