import{_ as e,o as a,c as s,V as n}from"./chunks/framework.02a8cfad.js";const D=JSON.parse('{"title":"DocumentFragment","description":"","frontmatter":{},"headers":[],"relativePath":"zh2.0/reference/typescript/interfaces/DocumentFragment.md","filePath":"zh2.0/reference/typescript/interfaces/DocumentFragment.md","lastUpdated":1692081356000}'),t={name:"zh2.0/reference/typescript/interfaces/DocumentFragment.md"},l=n('<h1 id="documentfragment" tabindex="-1">DocumentFragment <a class="header-anchor" href="#documentfragment" aria-label="Permalink to &quot;DocumentFragment&quot;">​</a></h1><p>没有父级的最小的文档对象。它被用作 Document 的轻量级版本，用于存储由节点组成的文档结构的一部分，类似标准的文档。关键的区别在于由于文档片段不属于活动文档树形结构的一部分，因此对这些片段做出改动时不会影响到文档本身，不会造成回流，也不会在做出改变时导致任何的性能损失。</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="find" tabindex="-1">find <a class="header-anchor" href="#find" aria-label="Permalink to &quot;find&quot;">​</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">find</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">selector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> HTMLElement</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="findall" tabindex="-1">findAll <a class="header-anchor" href="#findall" aria-label="Permalink to &quot;findAll&quot;">​</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">findAll</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">selector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> HTMLElement[]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',7),o=[l];function r(c,p,i,d,m,h){return a(),s("div",null,o)}const y=e(t,[["render",r]]);export{D as __pageData,y as default};
