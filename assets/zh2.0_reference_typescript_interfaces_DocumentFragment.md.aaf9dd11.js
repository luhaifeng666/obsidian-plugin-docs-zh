import{_ as e,c as a,o as s,a as n}from"./app.17c351c3.js";const f=JSON.parse('{"title":"DocumentFragment","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"find","slug":"find"},{"level":3,"title":"findAll","slug":"findall"}],"relativePath":"zh2.0/reference/typescript/interfaces/DocumentFragment.md","lastUpdated":1671885495000}'),t={name:"zh2.0/reference/typescript/interfaces/DocumentFragment.md"},o=n(`<h1 id="documentfragment" tabindex="-1">DocumentFragment <a class="header-anchor" href="#documentfragment" aria-hidden="true">#</a></h1><p>A minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is that because the document fragment isn&#39;t part of the active document tree structure, changes made to the fragment don&#39;t affect the document, cause reflow, or incur any performance impact that can occur when changes are made.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="find" tabindex="-1">find <a class="header-anchor" href="#find" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">find</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">selector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> HTMLElement</span></span>
<span class="line"></span></code></pre></div><h3 id="findall" tabindex="-1">findAll <a class="header-anchor" href="#findall" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">findAll</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">selector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> HTMLElement[]</span></span>
<span class="line"></span></code></pre></div>`,7),l=[o];function r(c,p,d,i,h,m){return s(),a("div",null,l)}const D=e(t,[["render",r]]);export{f as __pageData,D as default};
