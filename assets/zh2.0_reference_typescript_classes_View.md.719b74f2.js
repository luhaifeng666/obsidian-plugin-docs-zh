import{_ as s,c as a,o as e,a as n}from"./app.9520c557.js";const y=JSON.parse('{"title":"View","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructor","slug":"constructor"},{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"app","slug":"app"},{"level":3,"title":"icon","slug":"icon"},{"level":3,"title":"navigation","slug":"navigation"},{"level":3,"title":"leaf","slug":"leaf"},{"level":3,"title":"containerEl","slug":"containerel"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"onOpen","slug":"onopen"},{"level":3,"title":"onClose","slug":"onclose"},{"level":3,"title":"getViewType","slug":"getviewtype"},{"level":3,"title":"getState","slug":"getstate"},{"level":3,"title":"setState","slug":"setstate"},{"level":3,"title":"getEphemeralState","slug":"getephemeralstate"},{"level":3,"title":"setEphemeralState","slug":"setephemeralstate"},{"level":3,"title":"getIcon","slug":"geticon"},{"level":3,"title":"onResize","slug":"onresize"},{"level":3,"title":"getDisplayText","slug":"getdisplaytext"},{"level":3,"title":"onPaneMenu","slug":"onpanemenu"}],"relativePath":"zh2.0/reference/typescript/classes/View.md","lastUpdated":1662510821000}'),t={name:"zh2.0/reference/typescript/classes/View.md"},l=n(`<h1 id="view" tabindex="-1">View <a class="header-anchor" href="#view" aria-hidden="true">#</a></h1><p>Extends <code>Component</code></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">constructor</span><span style="color:#A6ACCD;">(leaf: WorkspaceLeaf)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="app" tabindex="-1">app <a class="header-anchor" href="#app" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">app</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> App</span></span>
<span class="line"></span></code></pre></div><h3 id="icon" tabindex="-1">icon <a class="header-anchor" href="#icon" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">icon</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> string</span></span>
<span class="line"></span></code></pre></div><h3 id="navigation" tabindex="-1">navigation <a class="header-anchor" href="#navigation" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">navigation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> boolean</span></span>
<span class="line"></span></code></pre></div><p>Whether or not the view is intended for navigation. If your view is a static view that is not intended to be navigated away, set this to false. (For example: File explorer, calendar, etc.) If your view opens a file or can be otherwise navigated, set this to true. (For example: Markdown editor view, Kanban view, PDF view, etc.)</p><h3 id="leaf" tabindex="-1">leaf <a class="header-anchor" href="#leaf" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">leaf</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WorkspaceLeaf</span></span>
<span class="line"></span></code></pre></div><h3 id="containerel" tabindex="-1">containerEl <a class="header-anchor" href="#containerel" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">containerEl</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> HTMLElement</span></span>
<span class="line"></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="onopen" tabindex="-1">onOpen <a class="header-anchor" href="#onopen" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">protected </span><span style="color:#82AAFF;">onOpen</span><span style="color:#A6ACCD;">(): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;void&gt;;</span></span>
<span class="line"></span></code></pre></div><h3 id="onclose" tabindex="-1">onClose <a class="header-anchor" href="#onclose" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">protected </span><span style="color:#82AAFF;">onClose</span><span style="color:#A6ACCD;">(): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;void&gt;;</span></span>
<span class="line"></span></code></pre></div><h3 id="getviewtype" tabindex="-1">getViewType <a class="header-anchor" href="#getviewtype" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">abstract </span><span style="color:#82AAFF;">getViewType</span><span style="color:#A6ACCD;">(): string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="getstate" tabindex="-1">getState <a class="header-anchor" href="#getstate" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">getState</span><span style="color:#A6ACCD;">(): any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="setstate" tabindex="-1">setState <a class="header-anchor" href="#setstate" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">setState</span><span style="color:#A6ACCD;">(state: any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result: ViewStateResult): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;void&gt;;</span></span>
<span class="line"></span></code></pre></div><h3 id="getephemeralstate" tabindex="-1">getEphemeralState <a class="header-anchor" href="#getephemeralstate" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">getEphemeralState</span><span style="color:#A6ACCD;">(): any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="setephemeralstate" tabindex="-1">setEphemeralState <a class="header-anchor" href="#setephemeralstate" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">setEphemeralState</span><span style="color:#A6ACCD;">(state: any): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><h3 id="geticon" tabindex="-1">getIcon <a class="header-anchor" href="#geticon" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">getIcon</span><span style="color:#A6ACCD;">(): string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="onresize" tabindex="-1">onResize <a class="header-anchor" href="#onresize" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">onResize</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><p>Called when the size of this view is changed.</p><h3 id="getdisplaytext" tabindex="-1">getDisplayText <a class="header-anchor" href="#getdisplaytext" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">abstract </span><span style="color:#82AAFF;">getDisplayText</span><span style="color:#A6ACCD;">(): string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="onpanemenu" tabindex="-1">onPaneMenu <a class="header-anchor" href="#onpanemenu" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">onPaneMenu</span><span style="color:#A6ACCD;">(menu: Menu</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> source: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">more-options</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tab-header</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> string): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><p>Populates the pane menu.</p><p>(Replaces the previously removed <code>onHeaderMenu</code> and <code>onMoreOptionsMenu</code>)</p>`,42),o=[l];function p(c,r,i,d,h,u){return e(),a("div",null,o)}const F=s(t,[["render",p]]);export{y as __pageData,F as default};
