import{_ as a,c as e,o as s,a as n}from"./app.81c6d9a5.js";const F=JSON.parse('{"title":"FileView","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructor","slug":"constructor"},{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"allowNoFile","slug":"allownofile"},{"level":3,"title":"file","slug":"file"},{"level":3,"title":"navigation","slug":"navigation"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"getDisplayText","slug":"getdisplaytext"},{"level":3,"title":"onload","slug":"onload"},{"level":3,"title":"getState","slug":"getstate"},{"level":3,"title":"setState","slug":"setstate"},{"level":3,"title":"onLoadFile","slug":"onloadfile"},{"level":3,"title":"onUnloadFile","slug":"onunloadfile"},{"level":3,"title":"canAcceptExtension","slug":"canacceptextension"}],"relativePath":"zh2.0/reference/typescript/classes/FileView.md","lastUpdated":1665192537000}'),l={name:"zh2.0/reference/typescript/classes/FileView.md"},t=n(`<h1 id="fileview" tabindex="-1">FileView <a class="header-anchor" href="#fileview" aria-hidden="true">#</a></h1><p>Extends <code>ItemView</code></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">constructor</span><span style="color:#A6ACCD;">(leaf: WorkspaceLeaf)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="allownofile" tabindex="-1">allowNoFile <a class="header-anchor" href="#allownofile" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">allowNoFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> boolean</span></span>
<span class="line"></span></code></pre></div><h3 id="file" tabindex="-1">file <a class="header-anchor" href="#file" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> TFile</span></span>
<span class="line"></span></code></pre></div><h3 id="navigation" tabindex="-1">navigation <a class="header-anchor" href="#navigation" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">navigation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> boolean</span></span>
<span class="line"></span></code></pre></div><p>Whether or not the view is intended for navigation. If your view is a static view that is not intended to be navigated away, set this to false. (For example: File explorer, calendar, etc.) If your view opens a file or can be otherwise navigated, set this to true. (For example: Markdown editor view, Kanban view, PDF view, etc.) File views can be navigated by default.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="getdisplaytext" tabindex="-1">getDisplayText <a class="header-anchor" href="#getdisplaytext" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">getDisplayText</span><span style="color:#A6ACCD;">(): string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="onload" tabindex="-1">onload <a class="header-anchor" href="#onload" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">onload</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><p>Override this to load your component</p><h3 id="getstate" tabindex="-1">getState <a class="header-anchor" href="#getstate" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">getState</span><span style="color:#A6ACCD;">(): any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="setstate" tabindex="-1">setState <a class="header-anchor" href="#setstate" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">setState</span><span style="color:#A6ACCD;">(state: any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result: ViewStateResult): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;void&gt;;</span></span>
<span class="line"></span></code></pre></div><h3 id="onloadfile" tabindex="-1">onLoadFile <a class="header-anchor" href="#onloadfile" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">onLoadFile</span><span style="color:#A6ACCD;">(file: TFile): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;void&gt;;</span></span>
<span class="line"></span></code></pre></div><h3 id="onunloadfile" tabindex="-1">onUnloadFile <a class="header-anchor" href="#onunloadfile" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">onUnloadFile</span><span style="color:#A6ACCD;">(file: TFile): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;void&gt;;</span></span>
<span class="line"></span></code></pre></div><h3 id="canacceptextension" tabindex="-1">canAcceptExtension <a class="header-anchor" href="#canacceptextension" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">canAcceptExtension</span><span style="color:#A6ACCD;">(extension: string): boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,28),o=[t];function i(p,c,r,d,h,u){return s(),e("div",null,o)}const y=a(l,[["render",i]]);export{F as __pageData,y as default};
