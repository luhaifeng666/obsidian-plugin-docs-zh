import{_ as s,c as e,o as n,a}from"./app.b36363ad.js";const m=JSON.parse('{"title":"EditorSuggest","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructor","slug":"constructor","link":"#constructor","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"context","slug":"context","link":"#context","children":[]},{"level":3,"title":"limit","slug":"limit","link":"#limit","children":[]}]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"setInstructions","slug":"setinstructions","link":"#setinstructions","children":[]},{"level":3,"title":"onTrigger","slug":"ontrigger","link":"#ontrigger","children":[]},{"level":3,"title":"getSuggestions","slug":"getsuggestions","link":"#getsuggestions","children":[]}]}],"relativePath":"zh2.0/reference/typescript/classes/EditorSuggest.md","lastUpdated":1676256392000}'),t={name:"zh2.0/reference/typescript/classes/EditorSuggest.md"},l=a(`<h1 id="editorsuggest" tabindex="-1">EditorSuggest <a class="header-anchor" href="#editorsuggest" aria-hidden="true">#</a></h1><p>继承自 <code>PopoverSuggest&lt;T&gt;</code></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">constructor</span><span style="color:#A6ACCD;">(app: App)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> EditorSuggestContext</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当前建议上下文，包含 <code>onTrigger</code> 的结果。 在 EditorSuggest 不该被运行时，它的值将为 null。</p><h3 id="limit" tabindex="-1">limit <a class="header-anchor" href="#limit" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">limit</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> number</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>覆盖它以对建议项使用不同的限制</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="setinstructions" tabindex="-1">setInstructions <a class="header-anchor" href="#setinstructions" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">setInstructions</span><span style="color:#A6ACCD;">(instructions: Instruction[]): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="ontrigger" tabindex="-1">onTrigger <a class="header-anchor" href="#ontrigger" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">abstract </span><span style="color:#82AAFF;">onTrigger</span><span style="color:#A6ACCD;">(cursor: EditorPosition</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> editor: Editor</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> file: TFile): EditorSuggestTriggerInfo </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>基于编辑器的行以及光标位置，决定 EditorSuggest 是否应该在此时被触发。 通常而言，您将在光标前的当前行文本上执行正则表达式。 返回 null 以表明该 EditorSuggest 不应该被触发。</p><p>在调用此方法的时候请留意性能问题，因为它将会被触发得非常频繁（在每次按键的时候都会触发）。 保持简单，并且如果您发现尚未到合适触发时机时尽可能早的返回 null。</p><h3 id="getsuggestions" tabindex="-1">getSuggestions <a class="header-anchor" href="#getsuggestions" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">abstract </span><span style="color:#82AAFF;">getSuggestions</span><span style="color:#A6ACCD;">(context: EditorSuggestContext): T[] </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">T[]</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>基于此上下文生成建议项。可以是异步的，但最好是同步的。 当生成一步建议项时，您应该传递上下文（context）。</p>`,21),r=[l];function i(o,p,c,d,u,g){return n(),e("div",null,r)}const b=s(t,[["render",i]]);export{m as __pageData,b as default};
