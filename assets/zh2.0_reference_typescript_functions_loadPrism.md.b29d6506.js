import{_ as s,c as a,o as e,a as t}from"./app.f15eeb53.js";const y=JSON.parse('{"title":"loadPrism","description":"","frontmatter":{},"headers":[],"relativePath":"zh2.0/reference/typescript/functions/loadPrism.md","lastUpdated":1674008423000}'),o={name:"zh2.0/reference/typescript/functions/loadPrism.md"},n=t(`<h1 id="loadprism" tabindex="-1">loadPrism <a class="header-anchor" href="#loadprism" aria-hidden="true">#</a></h1><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadPrism</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div><p>Load Prism.js and return a promise to the global Prism object. Can also use <code>Prism</code> after this promise resolves to get the same reference.</p>`,3),r=[n];function l(p,c,i,d,_,m){return e(),a("div",null,r)}const f=s(o,[["render",l]]);export{y as __pageData,f as default};
