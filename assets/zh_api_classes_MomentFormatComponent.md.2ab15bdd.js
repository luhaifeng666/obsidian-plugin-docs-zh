import{_ as a,c as e,o as s,a as n}from"./app.9520c557.js";const g=JSON.parse('{"title":"MomentFormatComponent","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructor","slug":"constructor"},{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"sampleEl","slug":"sampleel"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"setDefaultFormat","slug":"setdefaultformat"},{"level":3,"title":"setSampleEl","slug":"setsampleel"},{"level":3,"title":"setValue","slug":"setvalue"},{"level":3,"title":"onChanged","slug":"onchanged"},{"level":3,"title":"updateSample","slug":"updatesample"}],"relativePath":"zh/api/classes/MomentFormatComponent.md","lastUpdated":1662510821000}'),t={name:"zh/api/classes/MomentFormatComponent.md"},l=n(`<h1 id="momentformatcomponent" tabindex="-1">MomentFormatComponent <a class="header-anchor" href="#momentformatcomponent" aria-hidden="true">#</a></h1><p>Extends <code>TextComponent</code></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">constructor</span><span style="color:#A6ACCD;">(containerEl: HTMLElement)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="sampleel" tabindex="-1">sampleEl <a class="header-anchor" href="#sampleel" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FFCB6B;">sampleEl</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> HTMLElement</span></span>
<span class="line"></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="setdefaultformat" tabindex="-1">setDefaultFormat <a class="header-anchor" href="#setdefaultformat" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">setDefaultFormat</span><span style="color:#A6ACCD;">(defaultFormat: string): </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"></span></code></pre></div><p>Sets the default format when input is cleared. Also used for placeholder.</p><h3 id="setsampleel" tabindex="-1">setSampleEl <a class="header-anchor" href="#setsampleel" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">setSampleEl</span><span style="color:#A6ACCD;">(sampleEl: HTMLElement): </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"></span></code></pre></div><h3 id="setvalue" tabindex="-1">setValue <a class="header-anchor" href="#setvalue" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">setValue</span><span style="color:#A6ACCD;">(value: string): </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"></span></code></pre></div><h3 id="onchanged" tabindex="-1">onChanged <a class="header-anchor" href="#onchanged" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">onChanged</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><h3 id="updatesample" tabindex="-1">updateSample <a class="header-anchor" href="#updatesample" aria-hidden="true">#</a></h3><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#82AAFF;">updateSample</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div>`,19),o=[l];function p(r,c,d,i,h,u){return s(),e("div",null,o)}const F=a(t,[["render",p]]);export{g as __pageData,F as default};
